@model SBS.BusinessEntities.BookingViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>BookingViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ExternalID)


   
    <div class="form-group">
        @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustomerID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.VehicleID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VehicleID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.VehicleID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DealerID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DealerID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DealerID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MechanicID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MechanicID, (IEnumerable<SelectListItem>)TempData["mechanics"], "Select Mechanic", new { @class = "form-control" })
            @*@Html.EditorFor(model => model.MechanicID, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.MechanicID, "", new { @class = "text-danger" })
            @{ TempData.Keep("mechanics"); }
        </div>
    </div>



    <div class="form-group">

        @Html.LabelFor(model => model.ServiceID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ServiceID, (IEnumerable<SelectListItem>)TempData["services"], "Select Services", new { @class = "form-control" })
            @*@Html.EditorFor(model => model.ServiceID, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.ServiceID, "", new { @class = "text-danger" })
            @{ TempData.Keep("services"); }
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status", new List<SelectListItem>

                {
                   new SelectListItem{ Text="Approved", Value = "Approved" },
                   new SelectListItem{ Text="Not-Approved", Value = "Not-Approved" },
                    new SelectListItem{ Text="Completed", Value = "Completed" }
                }, new { @class = "form-control" })
            @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control", } })
            @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control", } })
    @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control", } })







    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
