{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset0 Calibri;}{\f6\fnil\fprq2\fcharset0 Arial;}{\f7\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f8\fnil\fprq2\fcharset0 Calibri;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red34\green34\blue34;}
{\stylesheet{\s0\snext0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Normal;}
{\*\cs15\snext15\b Strong Emphasis;}
{\s16\sbasedon0\snext17\dbch\af6\langfe1081\dbch\af7\afs28\ql\nowidctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\loch\f4\fs28\lang1033\kerning1 Heading;}
{\s17\sbasedon0\snext17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Text Body;}
{\s18\sbasedon17\snext18\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 List;}
{\s19\sbasedon0\snext19\dbch\af6\langfe1081\dbch\af7\afs24\ai\ql\nowidctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Caption;}
{\s20\sbasedon0\snext20\dbch\af6\langfe1081\dbch\af7\afs24\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Index;}
}{\*\generator LibreOffice/6.4.1.2$Windows_X86_64 LibreOffice_project/4d224e95b98b138af42a64d84056446d09082932}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2021\mo3\dy26\hr16\min49}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab720
\hyphauto0\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qc\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b\loch\f5\loch
Angular Unit Testing}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qc\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b\loch\f5
 }{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b\loch\f5\loch
Assingement-1}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b\loch\f5\loch
Unit Testing :}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
Unit testing is the process of testing small, isolated pieces of code. Also known as isolated testing, unit tests do not use external resources, such as the network or a database}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\lang9\i0\b0\loch\f5\loch
Unit testing, a testing technique using which individual modules are tested to determine if there are any issues by the developer himself. It is concerned with functional correctness of the standalone modules.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
The main aim is to isolate each unit of the system to identify, analyze and fix the defects.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch\dbch\af8\afs22\ab\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b\loch\f5\loch
Advantages:  }
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
1. Reduces Defects in the Newly developed features }{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
or reduces}{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
 bugs when changing the existing functionality.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
2. Reduces Cost of Testing as defects are captured in the very early phase.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
3. Improves design and allows better refactoring of code.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf1\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
4. Unit Tests, when integrated with build gives the quality of the build as well.}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b\loch\f5\loch
Functional Testing :}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\cs15\b\scaps0\caps0\cf17\fs22\expnd0\expndtw0\lang9\i0\loch\f5\loch
FT }{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\lang9\i0\b0\loch\f5\loch
is a type of software testing that validates the software system against the functional requirements/specifications. The purpose of Functional tests is to test each function of the software application, by providing appropriate input, verifying the output against the Functional requirements.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
Functional testing mainly involves black box testing and it is not concerned about the source code of the application. This testing checks User Interface, API, Database, Security, Client/Server communication and other functionality of the Application Under Test. The testing can be done either manually or using automation.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\ltrpar{\rtlch\dbch\af8\afs22\ab\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\i0\b\loch\f5\loch
Advantages:}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
1. It produces a defect-free product.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
2. It ensures that the customer is }{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
satisfied.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
3. It ensures that all requirements are met.}
\par \pard\plain \s17\dbch\af6\langfe1081\dbch\af7\afs24\ql\sl276\slmult1\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\widctlpar\li0\ri0\lin0\rin0\fi0\sb0\sa0\ltrpar{\rtlch\dbch\af8\afs22\hich\af5 \ltrch\scaps0\caps0\cf17\fs22\expnd0\expndtw0\i0\b0\loch\f5\loch
4. It ensures that the software/ product works as expected.}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200\rtlch\afs20 \ltrch\fs20\loch

\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b\loch\f5\loch
Benefits of testing as pper develeoper prespective:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
Testing is the process of executing a program or system with the intent of finding errors and it wi systematically uncover various classes of errors in a minimum amount of time and with a minimum amount of effort.}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
testing shows that the software appears to be working as stated in the specifications and the data collected using testing can also provide an indication of the software's reliability and quality. also it cannot show the absence of a defect, it can only show whether software defects are present.}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
testing is an activity that must be done during the software development cycle prior to the release into production as the process of demonstrating that defects are not present. and the process of showing that a program performs all the intended functions correctly before being released into production.}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
testing is the process of establishing confidence that a program does what it is supposed to do and during the maintenance cycle of the software, testing is still extremely important and needs to be done every time the software is modified.}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200\loch

\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
Where and why :Unit tests are also especially usefulwhen it comes to refactoring or re-writing a piece of code. If you have good unittests coverage, you can refactor with con\u64257\'3fdence. Without unit tests, it is often hard toensure that you didn't break anything.}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200\loch

\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
1:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it(`should have as title 'AngularApp'`, () => \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const fixture = TestBed.createComponent(AppComponent);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const app = fixture.componentInstance;}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(app.title).toEqual('AngularApp');}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
2:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it('should create the app', () => \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const fixture = TestBed.createComponent(AppComponent);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const app = fixture.componentInstance;}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(app).toBeTruthy();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
3:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it('should create', () => \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(component).toBeTruthy();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
4:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
describe('Company.Model', () => \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it('should create an instance', () => \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(new Company.Model()).toBeTruthy();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
5:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it(`should have as title \u8216\'91UnitTestExample\u8217\'92`, () =>\{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const fixture = TestBed.createComponent(AppComponent);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const app = fixture.componentInstance;}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(app.title).toEqual(\u8216\'91UnitTestExample\u8217\'92);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
6:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it(\u8216\'91should change title to Unit Test App\u8217\'92, async(() => \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const fixture = TestBed.createComponent(AppComponent);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
fixture.nativeElement.querySelector(\u8216\'91button\u8217\'92).click();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
fixture.detectChanges();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(fixture.nativeElement.querySelector(\u8216\'91h1\u8217\'92)}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
.textContent).toEqual('Unit Test App');}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\}));}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
7:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it('should have a defined component', () => \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(component).toBeDefined();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
8:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it ('should check incremented value is greater thanzero', ()=> \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
let counterComponent: CounterComponent = new CounterComponent();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const curCounterValue = counterComponent.increaseCounter();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(curCounterValue).toBeGreaterThan(0);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\});}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
9:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it ('should check decremented value is less than zero', ()=> \{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
let counterComponent: CounterComponent = new CounterComponent();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const curCounterValue = counterComponent.decreaseCounter();}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(curCounterValue).toBeLessThan(0);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\}) ;}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
10:}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
it ('should increment if input is positive', ()=>\{}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
const counterResult = counterParameter(1);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
expect(counterResult).toBe(2);}
\par \pard\plain \s0\dbch\af6\langfe1081\dbch\af7\afs24\alang1081\ql\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\sl276\slmult1\qj\sb0\sa200{\rtlch\dbch\af8\hich\af5 \ltrch\fs22\lang9\b0\loch\f5\loch
\}) ;}
\par }